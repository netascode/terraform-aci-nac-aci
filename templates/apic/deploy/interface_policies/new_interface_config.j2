{# iterate_list apic.node_policies.nodes id item[1] #}
{
    "infraInfra": {
        "attributes": {
            "dn": "uni/infra"
        },
        "children": [
            {%- if apic.new_interface_configuration | default(defaults.apic.new_interface_configuration) %}
            {%- set comma1 = joiner(",") %}
            {%- if apic.auto_generate_switch_pod_profiles | default(defaults.apic.auto_generate_switch_pod_profiles) | cisco.aac.aac_bool("enabled") == "enabled" or apic.auto_generate_access_leaf_switch_interface_profiles | default(defaults.apic.auto_generate_access_leaf_switch_interface_profiles) | cisco.aac.aac_bool("enabled") == "enabled" %}
            {%- for _node in apic.node_policies.nodes | default([]) %}
            {%- if _node.role == "leaf" and _node.id | string == item[1] %}
            {%- set query = "nodes[?id==`" ~ _node.id ~ "`].interfaces[]" %}
            {%- if apic.interface_policies is defined %}
            {%- for int in (apic.interface_policies | default() | community.general.json_query(query) | default([])) %}
            {%- set module = int.module | default(defaults.apic.interface_policies.nodes.interfaces.from_module) %}
            {%- if int.breakout is not defined %}{{ comma1() }}
            {
                "infraPortConfig": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        {% if int.policy_group is defined %}
                        {% set query = "leaf_interface_policy_groups[?name=='" ~ int.policy_group ~ "'].type[]" %}
                        {% set type = (apic.access_policies | community.general.json_query(query)) %}
                        {% set policy_group_name = int.policy_group ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                        {% if type[0] in ["pc", "vpc"] %}
                        "assocGrp": "uni/infra/funcprof/accbundle-{{ policy_group_name }}",
                        {% else %}
                        "assocGrp": "uni/infra/funcprof/accportgrp-{{ policy_group_name }}",
                        {% endif %}
                        {% elif int.fex_id is defined %}
                        "connectedFex": "{{ int.fex_id }}",
                        {% endif %}
                        "card": "{{ module }}",
                        "description": "{{ int.description }}",
                        "node": "{{ _node.id }}",
                        "port": "{{ int.port }}"
                    }
                }
            }
            {%- elif int.breakout is defined %}{{ comma1() }}
            {
                "infraPortConfig": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        "brkoutMap": "{{ int.breakout }}",
                        "card": "{{ module }}",
                        "description": "{{ int.description }}",
                        "node": "{{ _node.id }}",
                        "port": "{{ int.port }}"
                    }
                }
            }
            {%- for sub in int.sub_ports | default([]) %}{{ comma1() }}
            {
                "infraPortConfig": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        {% if sub.policy_group is defined %}
                        {% set query = "leaf_interface_policy_groups[?name=='" ~ sub.policy_group ~ "'].type[]" %}
                        {% set type = (apic.access_policies | community.general.json_query(query)) %}
                        {% set policy_group_name = sub.policy_group ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                        {% if type[0] in ["pc", "vpc"] %}
                        "assocGrp": "uni/infra/funcprof/accbundle-{{ policy_group_name }}",
                        {% else %}
                        "assocGrp": "uni/infra/funcprof/accportgrp-{{ policy_group_name }}",
                        {% endif %}
                        {% elif sub.fex_id is defined %}
                        "connectedFex": "{{ sub.fex_id }}",
                        {% endif %}
                        "card": "{{ module }}",
                        "description": "{{ sub.description }}",
                        "node": "{{ _node.id }}",
                        "port": "{{ int.port }}", 
                        "subPort": "{{ sub.port }}"
                    }
                }
            }
            {%- endfor %}
            {%- endif %}
            {%- endfor %}
            {%- set query = "nodes[?id==`" ~ _node.id ~ "`].fexes[]" %}
            {%- for fex in (apic.interface_policies | default() | community.general.json_query(query) | default([])) %}
            {%- for int in fex.interfaces | default([]) %}{{ comma1() }}
            {
                "infraPortConfig": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        {% if int.policy_group is defined %}
                        {% set query = "leaf_interface_policy_groups[?name=='" ~ int.policy_group ~ "'].type[]" %}
                        {% set type = (apic.access_policies | community.general.json_query(query)) %}
                        {% set policy_group_name = int.policy_group ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                        {% if type[0] in ["pc", "vpc"] %}
                        "assocGrp": "uni/infra/funcprof/accbundle-{{ policy_group_name }}",
                        {% else %}
                        "assocGrp": "uni/infra/funcprof/accportgrp-{{ policy_group_name }}",
                        {% endif %}
                        {% endif %}
                        "card": "{{ fex.id }}",
                        "description": "{{ int.description }}",
                        "node": "{{ _node.id }}",
                        "port": "1", 
                        "subPort": "{{ int.port }}"
                    }
                }
            }
            {%- endfor %}
            {%- endfor %}
            {%- endif %}
            {%- endif %}
            {%- endfor %}
            {%- endif %}
            {%- if apic.auto_generate_switch_pod_profiles | default(defaults.apic.auto_generate_switch_pod_profiles) | cisco.aac.aac_bool("enabled") == "enabled" or apic.auto_generate_access_spine_switch_interface_profiles | default(defaults.apic.auto_generate_access_spine_switch_interface_profiles) | cisco.aac.aac_bool("enabled") == "enabled" %}
            {%- for node in apic.node_policies.nodes | default([]) %}
            {%- if node.role == "spine" and node.id | string == item[1] %}
            {%- if apic.interface_policies is defined %}
            {%- set query = "nodes[?id==`" ~ node.id ~ "`].interfaces[]" %}
            {%- for int in (apic.interface_policies | default() | community.general.json_query(query) | default([])) %}
            {%- set module = int.module | default(defaults.apic.interface_policies.nodes.interfaces.from_module) %}{{ comma1() }}
            {
                "infraPortConfig": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        {% if int.policy_group is defined %}
                        {% set policy_group_name = int.policy_group ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                        "assocGrp": "uni/infra/funcprof/spaccportgrp-{{ policy_group_name }}",
                        {% endif %}
                        "card": "{{ module }}",
                        "description": "{{ int.description }}",
                        "node": "{{ node.id }}",
                        "port": "{{ int.port }}",
                        "role": "spine"
                    }
                }
            }
            {%- endfor %}
            {%- endif %}
            {%- endif %}
            {%- endfor %}
            {%- endif %}
            {%- endif %}

        ]
    }
}

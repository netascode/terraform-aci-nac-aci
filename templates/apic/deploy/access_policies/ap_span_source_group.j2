{
    "infraInfra": {
        "attributes": {
            "dn": "uni/infra"
        },
        "children": [
            {%- set comma1 = joiner(",") %}
            {%- for span in apic.access_policies.span.source_groups | default([]) %}{{ comma1() }}
            {% set span_name = span.name ~ defaults.apic.access_policies.span.source_groups.name_suffix %}
            {
                "spanSrcGrp": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        "adminSt": "{{ span.admin_state | default(defaults.apic.access_policies.span.source_groups.admin_state) | cisco.aac.aac_bool("enabled") }}",
                        "descr": "{{ span.description | default() }}",
                        "dn": "uni/infra/srcgrp-{{ span_name }}",
                        "name": "{{ span_name }}",
                        "childAction": "deleteNonPresent"
                    },
                    "children": [
                        {%- set comma2 = joiner(",") %}
                        {%- for source in span.sources | default([]) %}{{ comma2() }}
                        {% set source_name = source.name ~ defaults.apic.access_policies.span.source_groups.sources.name_suffix %}
                        {
                            "spanSrc": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "descr": "{{ source.description | default() }}",
                                    "dir": "{{ source.direction | default(defaults.apic.access_policies.span.source_groups.sources.direction)}}",
                                    "name": "{{ source_name}}",
                                    "spanOnDrop": "{{ source.span_drop | default(defaults.apic.access_policies.span.source_groups.sources.span_drop) | cisco.aac.aac_bool("yes") }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                {%- set comma3 = joiner(",") %}
                                {%- if source.tenant is defined and source.application_profile is defined and source.endpoint_group is defined %}{{ comma3() }}
                                {%- set application_profile_name = source.application_profile ~ defaults.apic.tenants.application_profiles.name_suffix %}      
                                {% set endpoint_group_name = source.endpoint_group ~ defaults.apic.tenants.application_profiles.endpoint_groups.name_suffix %}
                                    {
                                        "spanRsSrcToEpg":  {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "tDn": "uni/tn-{{ source.tenant }}/ap-{{ application_profile_name }}/epg-{{ endpoint_group_name }}"
                                            }
                                        }
                                    }                                
                                {%- endif %}
                                {%- if source.tenant is defined and source.l3out is defined %}{{ comma3() }}
                                {%- set l3out_name = source.l3out ~ defaults.apic.tenants.l3outs.name_suffix %}      
                                    {
                                        "spanRsSrcToL3extOut": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "addr": "0.0.0.0",
                                                "encap": "vlan-{{ source.vlan }}",
                                                "tDn": "uni/tn-{{ source.tenant }}/out-{{ l3out_name }}"
                                            }
                                        }
                                    }
                                {%- endif %}
                                {%- for path in source.access_paths| default([]) %}{{ comma3() }}
                                    {
                                        "spanRsSrcToPathEp": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                {% if path.node_id is defined and path.channel is not defined %}
                                                    {% set query = "nodes[?id==`" ~ path.node_id ~ "`].pod" %}
                                                    {% set pod = path.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                    {% if path.sub_port is defined %}
                                                "tDn": "topology/pod-{{ pod }}/paths-{{ path.node_id }}/pathep-[eth{{ path.module | default(defaults.apic.access_policies.span.source_groups.sources.access_paths.module) }}/{{ path.port }}/{{ path.sub_port }}]"
                                                    {% elif path.fex_id is defined %}
                                                "tDn": "topology/pod-{{ pod }}/paths-{{ path.node_id }}/extpaths-{{ path.fex_id }}/pathep-[eth{{ path.module | default(defaults.apic.access_policies.span.source_groups.sources.access_paths.module) }}/{{ path.port }}]"
                                                    {%else%}
                                                "tDn": "topology/pod-{{ pod }}/paths-{{ path.node_id }}/pathep-[eth{{ path.module | default(defaults.apic.access_policies.span.source_groups.sources.access_paths.module) }}/{{ path.port }}]"
                                                    {% endif %}                                                    
                                                {% else %}
                                                    {% set policy_group_name = path.channel ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                                                    {% set query = "leaf_interface_policy_groups[?name==`" ~ path.channel ~ "`].type" %}
                                                    {% set type = (apic.access_policies | community.general.json_query(query))[0] %}
                                                    {% set query_sub_ports = "nodes[?interfaces[?sub_ports[?policy_group==`" ~ path.channel ~ "`]]].id" %}
                                                    {% set id_sub_ports = (apic.interface_policies | default() | community.general.json_query(query_sub_ports)) %}
                                                    {% set query_ports = "nodes[?interfaces[?policy_group==`" ~ path.channel ~ "`]].id" %}
                                                    {% set id_ports = (apic.interface_policies | default() | community.general.json_query(query_ports)) %}
                                                    {% if id_sub_ports | length > 0 %}
                                                        {% if path.node_id is defined %}
                                                            {% set node = path.node_id %}
                                                        {% else %}
                                                            {% set query = "nodes[?interfaces[?sub_ports[?policy_group==`" ~ path.channel ~ "`]]].id" %}
                                                            {% set node = (apic.interface_policies | default() | community.general.json_query(query))[0] %}
                                                        {% endif %}
                                                        {% set query = "nodes[?id==`" ~ node ~ "`].pod" %}
                                                        {% set pod = path.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                        {% if type == 'vpc' %}
                                                            {% if path.node2_id is defined %}
                                                                {% set node2 = path.node2_id %}
                                                            {% else %}
                                                                {% set query = "nodes[?interfaces[?sub_ports[?policy_group==`" ~ path.channel ~ "`]]].id" %}
                                                                {% set node2 = (apic.interface_policies | default() | community.general.json_query(query))[1] %}
                                                            {% endif %}
                                                "tDn": "topology/pod-{{ pod }}/protpaths-{{ node }}-{{ node2 }}/pathep-[{{ policy_group_name }}]"
                                                        {% else %}
                                                "tDn": "topology/pod-{{ pod }}/paths-{{ node }}/pathep-[{{ policy_group_name }}]"
                                                        {% endif %}                                                    
                                                    {% elif id_ports | length > 0 %}
                                                        {% if path.node_id is defined %}
                                                            {% set node = path.node_id %}
                                                        {% else %}
                                                            {% set query = "nodes[?interfaces[?policy_group==`" ~ path.channel ~ "`]].id" %}
                                                            {% set node = (apic.interface_policies | default() | community.general.json_query(query))[0] %}
                                                        {% endif %}
                                                        {% set query = "nodes[?id==`" ~ node ~ "`].pod" %}
                                                        {% set pod = path.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                        {% if type == 'vpc' %}
                                                            {% if path.node2_id is defined %}
                                                                {% set node2 = path.node2_id %}
                                                            {% else %}
                                                                {% set query = "nodes[?interfaces[?policy_group==`" ~ path.channel ~ "`]].id" %}
                                                                {% set node2 = (apic.interface_policies | default() | community.general.json_query(query))[1] %}
                                                            {% endif %}
                                                "tDn": "topology/pod-{{ pod }}/protpaths-{{ node }}-{{ node2 }}/pathep-[{{ policy_group_name }}]"
                                                        {% else %}
                                                "tDn": "topology/pod-{{ pod }}/paths-{{ node }}/pathep-[{{ policy_group_name }}]"
                                                        {% endif %}
                                                    {% endif %}
                                                {% endif %}
                                            }
                                        }
                                    }
                                {%- endfor %}
                                
                                ]
                            }
                        }
                        {%- endfor %}
                        {%- if span.filter_group is defined %}{{ comma2() }}
                        {% set filter_group_name = span.filter_group ~ defaults.apic.access_policies.span.filter_groups.name_suffix %}
                        {
                            "spanRsSrcGrpToFilterGrp": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "tDn": "uni/infra/filtergrp-{{ filter_group_name }}"
                                }
                            }
                        }
                        {%- endif %}{{ comma2() }}
                        {% set destination_name = span.destination.name ~ defaults.apic.access_policies.span.destination_groups.name_suffix %}
                        {
                            "spanSpanLbl": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "descr": "{{ span.destination.description | default()}}",
                                    "name": "{{ destination_name }}",
                                    "tag": "yellow-green"
                                }
                            }
                        }
                    ]
                }
            }
            {%- endfor %}
            
        ]
    }
}
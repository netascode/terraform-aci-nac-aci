 {
    "infraInfra": {
        "attributes": {
            "dn": "uni/infra"
        },
        "children": [
            {%- set comma1 = joiner(",") %}
            {%- for vspan in apic.access_policies.vspan.sessions | default([]) %}{{ comma1() }}
            {% set vspan_name = vspan.name ~ defaults.apic.access_policies.vspan.sessions.name_suffix %}
            {
                "spanVSrcGrp": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        "name": "{{ vspan_name }}",
                        "descr": "{{ vspan.description | default() }}",
                        "dn": "uni/infra/vsrcgrp-{{ vspan_name }}",
                        "adminSt": "{% if vspan.admin_state | default(defaults.apic.access_policies.vspan.sessions.admin_state) | cisco.aac.aac_bool("enabled") == "enabled" %}start{% else %}stop{% endif %}",
                        "childAction": "deleteNonPresent"
                    },
                    "children": [
                        {%- set comma2 = joiner(",") %}
                        {%- for source in vspan.sources | default([]) %}{{ comma2() }}
                        {% set source_name = source.name ~ defaults.apic.access_policies.vspan.sessions.sources.name_suffix %}
                        {
                            "spanVSrc": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "name": "{{ source_name }}",
                                    "descr": "{{ source.description | default() }}",
                                    "dir": "{{ source.direction | default(defaults.apic.access_policies.vspan.sessions.sources.direction) }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                    {%- set comma3 = joiner(",") %}
                                    {%- for path in source.access_paths| default([]) %}{{ comma3() }}
                                    {
                                    "spanRsSrcToPathEp": {
                                        "attributes": {
                                            "annotation": "orchestrator:aac",
                                        {% if path.node_id is defined and path.channel is not defined%}
                                        {% set query = "nodes[?id==`" ~ path.node_id ~ "`].pod" %}
                                        {% set pod = path.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                            "tDn": "topology/pod-{{ pod }}/paths-{{ path.node_id }}/pathep-[eth{{ path.module | default(defaults.apic.access_policies.vspan.sessions.sources.access_paths.module) }}/{{ path.port }}]"
                                        {% else %}
                                        {% set policy_group_name = path.channel ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                                        {% set query = "leaf_interface_policy_groups[?name==`" ~ path.channel ~ "`].type" %}
                                        {% if path.type is defined %}
                                            {% set type = path.type %}
                                        {% else %}
                                            {% set type = (apic.access_policies | community.general.json_query(query))[0] %}
                                        {% endif %}
                                        {% if path.node_id is defined %}
                                            {% set node = path.node_id %}
                                        {% else %}
                                            {% set query = "nodes[?interfaces[?policy_group==`" ~ path.channel ~ "`]].id" %}
                                            {% set node = (apic.interface_policies | default() | community.general.json_query(query))[0] %}
                                        {% endif %}
                                        {% set query = "nodes[?id==`" ~ node ~ "`].pod" %}
                                        {% set pod = path.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                        {% if type == 'vpc' %}
                                        {% if path.node2_id is defined %}
                                            {% set node2 = path.node2_id %}
                                        {% else %}
                                            {% set query = "nodes[?interfaces[?policy_group==`" ~ path.channel ~ "`]].id" %}
                                            {% set node2 = (apic.interface_policies | default() | community.general.json_query(query))[1] %}
                                        {% endif %}
                                            "tDn": "topology/pod-{{ pod }}/protpaths-{{ node }}-{{ node2 }}/pathep-[{{ policy_group_name }}]"
                                        {% else %}
                                            "tDn": "topology/pod-{{ pod }}/paths-{{ node }}/pathep-[{{ policy_group_name }}]"
                                        {% endif %}
                                        {% endif %}
                                        }
                                    }
                                    }
                                    {%- endfor %}
                                    {%- if source.tenant is defined and source.application_profile is defined and source.endpoint_group is defined and source.endpoint is not defined %}{{ comma3() }}
                                    {%- set application_profile_name = source.application_profile ~ defaults.apic.tenants.application_profiles.name_suffix %}      
                                    {% set endpoint_group_name = source.endpoint_group ~ defaults.apic.tenants.application_profiles.endpoint_groups.name_suffix %}
                                        {
                                            "spanRsSrcToEpg":  {
                                                "attributes": {
                                                    "annotation": "orchestrator:aac",
                                                    "tDn": "uni/tn-{{ source.tenant }}/ap-{{ application_profile_name }}/epg-{{ endpoint_group_name }}"
                                                }
                                            }
                                        }                                
                                    {%- endif %}
                                    {%- if source.tenant is defined and source.application_profile is defined and source.endpoint_group is defined and source.endpoint is defined %}{{ comma3() }}
                                    {%- set application_profile_name = source.application_profile ~ defaults.apic.tenants.application_profiles.name_suffix %}      
                                    {% set endpoint_group_name = source.endpoint_group ~ defaults.apic.tenants.application_profiles.endpoint_groups.name_suffix %}
                                    {
                                        "spanRsSrcToVPort": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "tDn": "uni/tn-{{ source.tenant }}/ap-{{ application_profile_name }}/epg-{{ endpoint_group_name }}/cep-{{ source.endpoint}}"
                                            }
                                        }
                                    }
                                    {%- endif %}
                                    
                                ]
                            }
                        }
                        {%- endfor %}{{ comma2() }}
                        {% set destination_name = vspan.destination.name ~ defaults.apic.access_policies.vspan.destination_groups.name_suffix %}
                        {
                            "spanSpanLbl": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "descr": "{{ vspan.destination.description | default()}}",
                                    "name": "{{ destination_name }}",
                                    "tag": "yellow-green"
                                }
                            }
                        }
                    ]
                }
            }
            {%- endfor %}

        ]
    }
}
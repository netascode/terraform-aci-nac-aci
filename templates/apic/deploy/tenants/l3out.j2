{# iterate_list apic.tenants name item[2] #}
{% set tenant = ((apic | default()) | community.general.json_query('tenants[?name==`' ~ item[2] ~ '`]'))[0] %}
{
    "fvTenant": {
        "attributes": {
            "dn": "uni/tn-{{ tenant.name }}",
            "name": "{{ tenant.name }}"
        },
        "children": [
            {%- set comma1 = joiner(",") %}
            {%- for l3out in tenant.l3outs | default([]) %}
            {%- set ns = namespace(bgp=false) %}{{ comma1() }}
            {% set l3out_name = l3out.name ~ defaults.apic.tenants.l3outs.name_suffix %}
            {% set l3out_np_name = l3out.name ~ defaults.apic.tenants.l3outs.node_profiles.name_suffix %}
            {% set l3out_ip_name = l3out.name ~ defaults.apic.tenants.l3outs.node_profiles.interface_profiles.name_suffix %}
            {
                "l3extOut": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        "descr": "{{ l3out.description | default() }}",
                        "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}",
                        "name": "{{ l3out_name }}",
                        "nameAlias": "{{ l3out.alias | default() }}",
                        "targetDscp": "{{ l3out.target_dscp | default(defaults.apic.tenants.l3outs.target_dscp) }}"
                    },
                    "children": [
                        {%- set comma2 = joiner(",") %}
                        {%- if ((l3out.nodes | default([])) | length) > 0 %}{{ comma2() }}
                        {
                            "l3extLNodeP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/lnodep-{{ l3out_np_name }}",
                                    "name": "{{ l3out_np_name }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                    {%- set comma3 = joiner(",") %}
                                    {%- for node in l3out.nodes | default([]) %}
                                    {%- set query = "nodes[?id==`" ~ node.node_id ~ "`].pod" %}
                                    {%- set pod = node.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}{{ comma3() }}
                                    {
                                        "l3extRsNodeL3OutAtt": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "rtrId": "{{ node.router_id }}",
                                                "rtrIdLoopBack": "{{ node.router_id_as_loopback | default(defaults.apic.tenants.l3outs.nodes.router_id_as_loopback) | cisco.aac.aac_bool("yes") }}",
                                                "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.pod) }}/node-{{ node.node_id }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if node.router_id_as_loopback | default(defaults.apic.tenants.l3outs.nodes.router_id_as_loopback) | cisco.aac.aac_bool("yes") == 'no' and node.loopback is defined %}{{ comma4() }}
                                                {
                                                    "l3extLoopBackIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ node.loopback }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}                                                
                                                {%- for sr in node.static_routes | default([]) %}{{ comma4() }}
                                                {
                                                    "ipRouteP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "aggregate": "no",
                                                            "descr": "{{ sr.description | default() }}",
                                                            "ip": "{{ sr.prefix }}",
                                                            "pref": "{{ sr.preference | default(defaults.apic.tenants.l3outs.nodes.static_routes.preference) }}",
                                                            "rtCtrl": "{% if sr.bfd | default(defaults.apic.tenants.l3outs.nodes.static_routes.bfd) | cisco.aac.aac_bool("enabled") == "enabled" %}bfd{% endif %}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {%- set comma5 = joiner(",") %}
                                                            {%- for nh in sr.next_hops | default([]) %}{{ comma5() }}
                                                            {
                                                                "ipNexthopP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "nhAddr": "{{ nh.ip }}",
                                                                        "pref": "{{ nh.preference | default(defaults.apic.tenants.l3outs.nodes.static_routes.next_hops.preference) }}",
                                                                        "type": "{{ nh.type | default(defaults.apic.tenants.l3outs.nodes.static_routes.next_hops.type) }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endfor %}

                                                        ]
                                                    }
                                                }
                                                {%- endfor %}
                                                {%- if tenant.name == 'infra' %}{{ comma4() }}
                                                {
                                                    "l3extInfraNodeP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "fabricExtCtrlPeering": "yes"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
 
                                            ]
                                        }
                                    }
                                    {%- endfor %}
                                    {%- for peer in l3out.bgp_peers | default([]) %}{{ comma3() }}
                                    {%- set ctrl = [] %}
                                    {%- if peer.allow_self_as | default(defaults.apic.tenants.l3outs.bgp_peers.allow_self_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("allow-self-as")] %}{% endif %}
                                    {%- if peer.as_override | default(defaults.apic.tenants.l3outs.bgp_peers.as_override) | cisco.aac.aac_bool("yes")  == "yes" %}{% set ctrl = ctrl + [("as-override")] %}{% endif %}
                                    {%- if peer.disable_peer_as_check | default(defaults.apic.tenants.l3outs.bgp_peers.disable_peer_as_check) | cisco.aac.aac_bool("yes")  == "yes" %}{% set ctrl = ctrl + [("dis-peer-as-check")] %}{% endif %}
                                    {%- if peer.next_hop_self | default(defaults.apic.tenants.l3outs.bgp_peers.next_hop_self) | cisco.aac.aac_bool("yes")  == "yes" %}{% set ctrl = ctrl + [("nh-sel")] %}{% endif %}
                                    {%- if peer.send_community | default(defaults.apic.tenants.l3outs.bgp_peers.send_community) | cisco.aac.aac_bool("yes")  == "yes" %}{% set ctrl = ctrl + [("send-com")] %}{% endif %}
                                    {%- if peer.send_ext_community | default(defaults.apic.tenants.l3outs.bgp_peers.send_ext_community) | cisco.aac.aac_bool("yes")  == "yes" %}{% set ctrl = ctrl + [("end-ext-com")] %}{% endif %}
                                    {%- set peer_ctrl = [] %}
                                    {%- if peer.bfd | default(defaults.apic.tenants.l3outs.bgp_peers.bfd) | cisco.aac.aac_bool("yes")  == "yes" %}{% set peer_ctrl = peer_ctrl + [("bfd")] %}{% endif %}
                                    {%- if peer.disable_connected_check | default(defaults.apic.tenants.l3outs.bgp_peers.disable_connected_check) | cisco.aac.aac_bool("yes")  == "yes" %}{% set peer_ctrl = peer_ctrl + [("dis-conn-check")] %}{% endif %}
                                    {%- set priv_as_ctrl = [] %}
                                    {%- if peer.remove_all_private_as | default(defaults.apic.tenants.l3outs.bgp_peers.remove_all_private_as) | cisco.aac.aac_bool("yes")  == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-all")] %}{% endif %}
                                    {%- if peer.remove_private_as | default(defaults.apic.tenants.l3outs.bgp_peers.remove_private_as) | cisco.aac.aac_bool("yes")  == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-exclusive")] %}{% endif %}
                                    {%- if peer.replace_private_as_with_local_as | default(defaults.apic.tenants.l3outs.bgp_peers.replace_private_as_with_local_as) | cisco.aac.aac_bool("yes")  == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("replace-as")] %}{% endif %}
                                    {%- set af = [] %}
                                    {%- if peer.unicast_address_family | default(defaults.apic.tenants.l3outs.bgp_peers.unicast_address_family) | cisco.aac.aac_bool("yes")  == "yes" %}{% set af = af + [("af-ucast")] %}{% endif %}
                                    {%- if peer.multicast_address_family | default(defaults.apic.tenants.l3outs.bgp_peers.multicast_address_family) | cisco.aac.aac_bool("yes")  == "yes" %}{% set af = af + [("af-mcast")] %}{% endif %}
                                    {
                                        "bgpPeerP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "addr": "{{ peer.ip }}",
                                                "descr": "{{ peer.description | default() }}",
                                                "ctrl": "{{ ctrl | join(',') }}",
                                                {% if peer.password is defined %}
                                                "password": "{{ peer.password }}",
                                                {% endif %}
                                                "allowedSelfAsCnt": "{{ peer.allowed_self_as_count |default(defaults.apic.tenants.l3outs.bgp_peers.allowed_self_as_count) }}",
                                                "peerCtrl": "{{ peer_ctrl | join(',') }}",
                                                "ttl": "{{ peer.ttl | default(defaults.apic.tenants.l3outs.bgp_peers.ttl) }}",
                                                "weight": "{{ peer.weight | default(defaults.apic.tenants.l3outs.bgp_peers.weight) }}",
                                                "privateASctrl": "{{ priv_as_ctrl | join(',') }}",
                                                "addrTCtrl": "{{ af | join(',') }}",
                                                "adminSt": "{{ peer.admin_state | default(defaults.apic.tenants.l3outs.bgp_peers.admin_state) | cisco.aac.aac_bool("enabled") }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {
                                                    "bgpAsP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "asn": "{{ peer.remote_as }}"
                                                        }
                                                    }
                                                }
                                                {%- if peer.local_as is defined %},
                                                {
                                                    "bgpLocalAsnP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "localAsn": "{{ peer.local_as }}",
                                                            "asnPropagate" : "{{ peer.as_propagate | default(defaults.apic.tenants.l3outs.bgp_peers.as_propagate) }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.peer_prefix_policy is defined %},
                                                {% set peer_prefix_policy_name = peer.peer_prefix_policy ~ defaults.apic.tenants.policies.bgp_peer_prefix_policies.name_suffix %}
                                                {
                                                    "bgpRsPeerPfxPol": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnBgpPeerPfxPolName": "{{ peer_prefix_policy_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.export_route_control is defined %},
                                                {% set export_route_control_name = peer.export_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                {
                                                    "bgpRsPeerToProfile": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "direction": "export",
                                                            "tDn": "uni/tn-{{ tenant.name }}/prof-{{ export_route_control_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.import_route_control is defined %},
                                                {% set import_route_control_name = peer.import_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                {
                                                    "bgpRsPeerToProfile": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "direction": "import",
                                                            "tDn": "uni/tn-{{ tenant.name}}/prof-{{ import_route_control_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                
                                            ]
                                        }
                                    }
                                    {%- endfor %}{{ comma3() }}
                                    {
                                        "l3extLIfP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "name": "{{ l3out_ip_name }}",
                                                "prio": "{{ l3out.qos_class | default(defaults.apic.tenants.l3outs.qos_class) }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if l3out.ospf is defined %}{{ comma4() }}
                                                {
                                                    "ospfIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "name": "{{ l3out.ospf.ospf_interface_profile_name | default(l3out.name) }}",
                                                            "authKeyId": "{{ l3out.ospf.auth_key_id | default(defaults.apic.tenants.l3outs.ospf.auth_key_id) }}",
                                                            "authKey": "{{ l3out.ospf.auth_key | default() }}",
                                                            "authType": "{{ l3out.ospf.auth_type | default(defaults.apic.tenants.l3outs.ospf.auth_type) }}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {% if l3out.ospf.policy is defined %}
                                                            {% set policy_name = l3out.ospf.policy ~ defaults.apic.tenants.policies.ospf_interface_policies.name_suffix %}
                                                            {
                                                                "ospfRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnOspfIfPolName": "{{ policy_name }}"
                                                                    }
                                                                }
                                                            }
                                                            {% endif %}
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if l3out.bfd_policy is defined %}{{ comma4() }}
                                                {% set bfd_name = l3out.bfd_policy ~ defaults.apic.tenants.policies.bfd_interface_policies.name_suffix %}
                                                {
                                                    "bfdIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "type": "none",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "bfdRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnBfdIfPolName": "{{ bfd_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if l3out.pim_policy is defined %}{{ comma4() }}
                                                {% set pim_name = l3out.pim_policy ~ defaults.apic.tenants.policies.pim_policies.name_suffix %}
                                                {
                                                    "pimIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "pimRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tDn": "uni/tn-{{tenant.name}}/pimifpol-{{ pim_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if l3out.igmp_interface_policy is defined %}{{ comma4() }}
                                                {% set igmp_name = l3out.igmp_interface_policy ~ defaults.apic.tenants.policies.igmp_interface_policies.name_suffix %}
                                                {
                                                    "igmpIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "igmpRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tDn": "uni/tn-{{ tenant.name }}/igmpIfPol-{{ igmp_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                } 
                                                {%- endif %}
                                                {%- if l3out.custom_qos_policy is defined %}{{ comma4() }}
                                                {% set custom_qos_policy_name = l3out.custom_qos_policy ~ defaults.apic.tenants.policies.custom_qos.name_suffix %}
                                                {
                                                    "l3extRsLIfPCustQosPol": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnQosCustomPolName": "{{ custom_qos_policy_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- for node in l3out.nodes | default([]) %}
                                                {%- for int in node.interfaces | default([]) %}{{ comma4() }}
                                                {% if int.port is defined or int.floating_svi | default(defaults.apic.tenants.l3outs.nodes.interfaces.floating_svi) | cisco.aac.aac_bool("yes") == 'yes' %}
                                                    {% set type = 'ap' %}
                                                    {% set query = "nodes[?id==`" ~ node.node_id ~ "`].pod" %}
                                                    {% set pod = node.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                {% else %}
                                                    {% set policy_group_name = int.channel ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                                                    {% set query = "leaf_interface_policy_groups[?name==`" ~ int.channel ~ "`].type" %}
                                                    {% set type = (apic.access_policies | community.general.json_query(query))[0] %}
                                                    {% if int.node_id is defined %}
                                                        {% set node = int.node_id %}
                                                    {% else %}
                                                        {% set query = "nodes[?interfaces[?policy_group==`" ~ int.channel ~ "`]].id" %}
                                                        {% set node = (apic.interface_policies | default() | community.general.json_query(query))[0] %}
                                                    {% endif %}
                                                    {% set query = "nodes[?id==`" ~ node ~ "`].pod" %}
                                                    {% set pod = node.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                    {% if type == 'vpc' %}
                                                        {% if int.node2_id is defined %}
                                                            {% set node2 = int.node2_id %}
                                                        {% else %}
                                                            {% set query = "nodes[?interfaces[?policy_group==`" ~ int.channel ~ "`]].id" %}
                                                            {% set node2 = (apic.interface_policies | default() | community.general.json_query(query))[1] %}
                                                        {% endif %}
                                                    {% endif %}
                                                {% endif %}
                                                {% if int.floating_svi | default(defaults.apic.tenants.l3outs.nodes.interfaces.floating_svi) | cisco.aac.aac_bool("yes") == 'no' %}
                                                {
                                                    "l3extRsPathL3OutAtt": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ defaults.apic.tenants.l3outs.nodes.interfaces.ip if type == 'vpc' else int.ip }}",
                                                            "autostate": "disabled",
                                                            "descr": "{{ int.description | default() }}",
                                                            "encapScope": "local",
                                                            {% if int.vlan is defined %}
                                                            "ifInstT": "{{ 'ext-svi' if int.svi | default(defaults.apic.tenants.l3outs.nodes.interfaces.svi) | cisco.aac.aac_bool("yes")  == 'yes' else 'sub-interface'}}",
                                                            "encap": "vlan-{{ int.vlan }}",
                                                            {% else %}
                                                            "ifInstT": "l3-port",
                                                            {% endif %}
                                                            "ipv6Dad": "enabled",
                                                            "llAddr": "::",
                                                            "mac": "{{ int.mac | default(defaults.apic.tenants.l3outs.nodes.interfaces.mac) }}",
                                                            "mode": "regular",
                                                            "mtu": "{{ int.mtu | default(defaults.apic.tenants.l3outs.nodes.interfaces.mtu) }}",
                                                            {% if type == 'ap' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/paths-{{ node.node_id }}/pathep-[eth{{ int.module | default(defaults.apic.tenants.l3outs.nodes.interfaces.module) }}/{{ int.port }}]",
                                                            {% elif type == 'pc' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/paths-{{ node }}/pathep-[{{ policy_group_name }}]",
                                                            {% elif type == 'vpc' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/protpaths-{{ node }}-{{ node2 }}/pathep-[{{ policy_group_name }}]",
                                                            {% endif %}
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                {% else %}
                                                {
                                                    "l3extVirtualLIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ int.ip }}",
                                                            "autostate": "disabled",
                                                            "descr": "{{ int.description | default() }}",
                                                            "encapScope": "local",
                                                            "ifInstT": "ext-svi",
                                                            "encap": "vlan-{{ int.vlan }}",
                                                            "ipv6Dad": "enabled",
                                                            "llAddr": "::",
                                                            "mac": "{{ int.mac | default(defaults.apic.tenants.l3outs.nodes.interfaces.mac) }}",
                                                            "mode": "regular",
                                                            "mtu": "{{ int.mtu | default(defaults.apic.tenants.l3outs.nodes.interfaces.mtu) }}",
                                                            "nodeDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/node-{{ node.node_id }}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                {% endif %}
                                                        "children": [
                                                            {%- set comma5 = joiner(",") %}
                                                            {%- if type != 'vpc' and int.ip_shared is defined %}{{ comma5() }}
                                                            {
                                                                "l3extIp": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_shared }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endif %}
                                                            {%- if type == 'vpc' %}{{ comma5() }}
                                                            {
                                                                "l3extMember": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_a }}",
                                                                        "side": "A",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "l3extIp": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "addr": "{{ int.ip_shared }}"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "l3extMember": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_b }}",
                                                                        "side": "B",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "l3extIp": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "addr": "{{ int.ip_shared }}"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                            {%- endif %}
                                                            {%- if int.floating_svi | default(defaults.apic.tenants.l3outs.nodes.interfaces.floating_svi) | cisco.aac.aac_bool("yes")  == 'yes' %}
                                                            {%- for path in int.paths | default([]) %}{{ comma5() }}
                                                            {
                                                                "l3extRsDynPathAtt": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "floatingAddr": "{{ path.floating_ip }}",
                                                                        "tDn": "uni/phys-{{ path.physical_domain }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endfor %}
                                                            {%- endif %}
                                                            {%- for peer in int.bgp_peers | default([]) %}
                                                            {%- set ns.bgp = true %}{{ comma5() }}
                                                            {% set ctrl = [] %}
                                                            {% if peer.allow_self_as | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.allow_self_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("allow-self-as")] %}{% endif %}
                                                            {% if peer.as_override | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.as_override) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("as-override")] %}{% endif %}
                                                            {% if peer.disable_peer_as_check | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.disable_peer_as_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("dis-peer-as-check")] %}{% endif %}
                                                            {% if peer.next_hop_self | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.next_hop_self) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("nh-sel")] %}{% endif %}
                                                            {% if peer.send_community | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.send_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("send-com")] %}{% endif %}
                                                            {% if peer.send_ext_community | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.send_ext_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("end-ext-com")] %}{% endif %}
                                                            {% set peer_ctrl = [] %}
                                                            {% if peer.bfd | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.bfd) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("bfd")] %}{% endif %}
                                                            {% if peer.disable_connected_check | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.disable_connected_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("dis-conn-check")] %}{% endif %}
                                                            {% set priv_as_ctrl = [] %}
                                                            {% if peer.remove_all_private_as | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.remove_all_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-all")] %}{% endif %}
                                                            {% if peer.remove_private_as | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.remove_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-exclusive")] %}{% endif %}
                                                            {% if peer.replace_private_as_with_local_as | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.replace_private_as_with_local_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("replace-as")] %}{% endif %}
                                                            {% set af = [] %}
                                                            {% if peer.unicast_address_family | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.unicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-ucast")] %}{% endif %}
                                                            {% if peer.multicast_address_family | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.multicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-mcast")] %}{% endif %}
                                                            {
                                                                "bgpPeerP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ peer.ip }}",
                                                                        "descr": "{{ peer.description | default() }}",
                                                                        "ctrl": "{{ ctrl | join(',') }}",
                                                                        {% if peer.password is defined %}
                                                                        "password": "{{ peer.password }}",
                                                                        {% endif %}
                                                                        "allowedSelfAsCnt": "{{ peer.allowed_self_as_count |default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.allowed_self_as_count) }}",
                                                                        "peerCtrl": "{{ peer_ctrl | join(',') }}",
                                                                        "ttl": "{{ peer.ttl | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.ttl) }}",
                                                                        "weight": "{{ peer.weight | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.weight) }}",
                                                                        "privateASctrl": "{{ priv_as_ctrl | join(',') }}",
                                                                        "addrTCtrl": "{{ af | join(',') }}",
                                                                        "adminSt": "{{ peer.admin_state | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.admin_state) | cisco.aac.aac_bool("enabled") }}",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "bgpAsP": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "asn": "{{ peer.remote_as }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- if peer.local_as is defined %},
                                                                        {
                                                                            "bgpLocalAsnP": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "localAsn": "{{ peer.local_as }}",
                                                                                    "asnPropagate" : "{{ peer.as_propagate | default(defaults.apic.tenants.l3outs.nodes.interfaces.bgp_peers.as_propagate) }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.peer_prefix_policy is defined %},
                                                                        {% set peer_prefix_policy_name = peer.peer_prefix_policy ~ defaults.apic.tenants.policies.bgp_peer_prefix_policies.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerPfxPol": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "tnBgpPeerPfxPolName": "{{ peer_prefix_policy_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.export_route_control is defined %},
                                                                        {% set export_route_control_name = peer.export_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerToProfile": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "direction": "export",
                                                                                    "tDn": "uni/tn-{{ tenant.name }}/prof-{{ export_route_control_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.import_route_control is defined %},
                                                                        {% set import_route_control_name = peer.import_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerToProfile": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "direction": "import",
                                                                                    "tDn": "uni/tn-{{ tenant.name}}/prof-{{ import_route_control_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        
                                                                    ]
                                                                }
                                                            }
                                                            {%- endfor %}

                                                        ]
                                                    }
                                                }
                                                {%- endfor %}

                                                {%- endfor %}

                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                        {%- endif %}
                        {%- for np in l3out.node_profiles | default([]) %}
                        {%- set l3out_np_name = np.name ~ defaults.apic.tenants.l3outs.node_profiles.name_suffix %}{{ comma2() }}
                        {
                            "l3extLNodeP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/lnodep-{{ l3out_np_name }}",
                                    "name": "{{ l3out_np_name }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                    {%- set comma3 = joiner(",") %}
                                    {%- for node in np.nodes | default([]) %}
                                    {%- set query = "nodes[?id==`" ~ node.node_id ~ "`].pod" %}
                                    {%- set pod = node.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}{{ comma3() }}
                                    {
                                        "l3extRsNodeL3OutAtt": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "rtrId": "{{ node.router_id }}",
                                                "rtrIdLoopBack": "{{ node.router_id_as_loopback | default(defaults.apic.tenants.l3outs.node_profiles.nodes.router_id_as_loopback) | cisco.aac.aac_bool("yes") }}",
                                                "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.node_profiles.nodes.pod) }}/node-{{ node.node_id }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if node.router_id_as_loopback | default(defaults.apic.tenants.l3outs.node_profiles.nodes.router_id_as_loopback) | cisco.aac.aac_bool("yes") == 'no' and node.loopback is defined %}{{ comma4() }}
                                                {
                                                    "l3extLoopBackIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ node.loopback }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- for sr in node.static_routes | default([]) %}{{ comma4() }}
                                                {
                                                    "ipRouteP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "aggregate": "no",
                                                            "descr": "{{ sr.description | default() }}",
                                                            "ip": "{{ sr.prefix }}",
                                                            "pref": "{{ sr.preference | default(defaults.apic.tenants.l3outs.node_profiles.nodes.static_routes.preference) }}",
                                                            "rtCtrl": "{% if sr.bfd | default(defaults.apic.tenants.l3outs.node_profiles.nodes.static_routes.bfd) | cisco.aac.aac_bool("enabled") == "enabled" %}bfd{% endif %}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {%- set comma5 = joiner(",") %}
                                                            {%- for nh in sr.next_hops | default([]) %}{{ comma5() }}
                                                            {
                                                                "ipNexthopP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "nhAddr": "{{ nh.ip }}",
                                                                        "pref": "{{ nh.preference | default(defaults.apic.tenants.l3outs.node_profiles.nodes.static_routes.next_hops.preference) }}",
                                                                        "type": "{{ nh.type | default(defaults.apic.tenants.l3outs.node_profiles.nodes.static_routes.next_hops.type) }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endfor %}

                                                        ]
                                                    }
                                                }
                                                {%- endfor %}
                                                {%- if tenant.name == 'infra' %}{{ comma4() }}
                                                {
                                                    "l3extInfraNodeP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "fabricExtCtrlPeering": "yes"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
 
                                            ]
                                        }
                                    }
                                    {%- endfor %}
                                    {%- for peer in np.bgp_peers | default([]) %}{{ comma3() }}
                                    {% set ctrl = [] %}
                                    {%- if peer.allow_self_as | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.allow_self_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("allow-self-as")] %}{% endif %}
                                    {%- if peer.as_override | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.as_override) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("as-override")] %}{% endif %}
                                    {%- if peer.disable_peer_as_check | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.disable_peer_as_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("dis-peer-as-check")] %}{% endif %}
                                    {%- if peer.next_hop_self | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.next_hop_self) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("nh-sel")] %}{% endif %}
                                    {%- if peer.send_community | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.send_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("send-com")] %}{% endif %}
                                    {%- if peer.send_ext_community | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.send_ext_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("end-ext-com")] %}{% endif %}
                                    {%- set peer_ctrl = [] %}
                                    {%- if peer.bfd | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.bfd) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("bfd")] %}{% endif %}
                                    {%- if peer.disable_connected_check | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.disable_connected_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("dis-conn-check")] %}{% endif %}
                                    {%- set priv_as_ctrl = [] %}
                                    {%- if peer.remove_all_private_as | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.remove_all_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-all")] %}{% endif %}
                                    {%- if peer.remove_private_as | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.remove_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-exclusive")] %}{% endif %}
                                    {%- if peer.replace_private_as_with_local_as | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.replace_private_as_with_local_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("replace-as")] %}{% endif %}
                                    {%- set af = [] %}
                                    {%- if peer.unicast_address_family | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.unicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-ucast")] %}{% endif %}
                                    {%- if peer.multicast_address_family | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.multicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-mcast")] %}{% endif %}
                                    {
                                        "bgpPeerP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "addr": "{{ peer.ip }}",
                                                "descr": "{{ peer.description | default() }}",
                                                "ctrl": "{{ ctrl | join(',') }}",
                                                {% if peer.password is defined %}
                                                "password": "{{ peer.password }}",
                                                {% endif %}
                                                "allowedSelfAsCnt": "{{ peer.allowed_self_as_count |default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.allowed_self_as_count) }}",
                                                "peerCtrl": "{{ peer_ctrl | join(',') }}",
                                                "ttl": "{{ peer.ttl | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.ttl) }}",
                                                "weight": "{{ peer.weight | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.weight) }}",
                                                "privateASctrl": "{{ priv_as_ctrl | join(',') }}",
                                                "addrTCtrl": "{{ af | join(',') }}",
                                                "adminSt": "{{ peer.admin_state | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.admin_state) | cisco.aac.aac_bool("enabled") }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {
                                                    "bgpAsP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "asn": "{{ peer.remote_as }}"
                                                        }
                                                    }
                                                }
                                                {%- if peer.local_as is defined %},
                                                {
                                                    "bgpLocalAsnP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "localAsn": "{{ peer.local_as }}",
                                                            "asnPropagate" : "{{ peer.as_propagate | default(defaults.apic.tenants.l3outs.node_profiles.bgp_peers.as_propagate) }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.peer_prefix_policy is defined %},
                                                {% set peer_prefix_policy_name = peer.peer_prefix_policy ~ defaults.apic.tenants.policies.bgp_peer_prefix_policies.name_suffix %}
                                                {
                                                    "bgpRsPeerPfxPol": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnBgpPeerPfxPolName": "{{ peer_prefix_policy_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.export_route_control is defined %},
                                                {% set export_route_control_name = peer.export_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                {
                                                    "bgpRsPeerToProfile": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "direction": "export",
                                                            "tDn": "uni/tn-{{ tenant.name }}/prof-{{ export_route_control_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if peer.import_route_control is defined %},
                                                {% set import_route_control_name = peer.import_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                {
                                                    "bgpRsPeerToProfile": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "direction": "import",
                                                            "tDn": "uni/tn-{{ tenant.name}}/prof-{{ import_route_control_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                
                                            ]
                                        }
                                    }
                                    {%- endfor %}
                                    {%- for ip in np.interface_profiles | default([]) %}
                                    {%- set l3out_ip_name = ip.name ~ defaults.apic.tenants.l3outs.node_profiles.interface_profiles.name_suffix %}{{ comma3() }}
                                    {
                                        "l3extLIfP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "name": "{{ l3out_ip_name }}",
                                                "prio": "{{ ip.qos_class | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.qos_class) }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if ip.ospf is defined %}{{ comma4() }}
                                                {
                                                    "ospfIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "name": "{{ ip.ospf.ospf_interface_profile_name | default(l3out.name) }}",
                                                            "authKeyId": "{{ ip.ospf.auth_key_id | default(defaults.apic.tenants.l3outs.ospf.auth_key_id) }}",
                                                            "authKey": "{{ ip.ospf.auth_key | default() }}",
                                                            "authType": "{{ ip.ospf.auth_type | default(defaults.apic.tenants.l3outs.ospf.auth_type) }}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {% if ip.ospf.policy is defined %}
                                                            {% set policy_name = ip.ospf.policy ~ defaults.apic.tenants.policies.ospf_interface_policies.name_suffix %}
                                                            {
                                                                "ospfRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnOspfIfPolName": "{{ policy_name }}"
                                                                    }
                                                                }
                                                            }
                                                            {% endif %}
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if ip.bfd_policy is defined %}{{ comma4() }}
                                                {% set bfd_name = ip.bfd_policy ~ defaults.apic.tenants.policies.bfd_interface_policies.name_suffix %}
                                                {
                                                    "bfdIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "type": "none",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "bfdRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnBfdIfPolName": "{{ bfd_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if ip.pim_policy is defined %}{{ comma4() }}
                                                {% set pim_name = ip.pim_policy ~ defaults.apic.tenants.policies.pim_policies.name_suffix %}
                                                {
                                                    "pimIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "pimRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tDn": "uni/tn-{{tenant.name}}/pimifpol-{{ pim_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if ip.igmp_interface_policy is defined %}{{ comma4() }}
                                                {% set igmp_name = ip.igmp_interface_policy ~ defaults.apic.tenants.policies.igmp_interface_policies.name_suffix %}
                                                {
                                                    "igmpIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "igmpRsIfPol": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tDn": "uni/tn-{{ tenant.name }}/igmpIfPol-{{ igmp_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if ip.custom_qos_policy is defined %}{{ comma4() }}
                                                {% set custom_qos_policy_name = ip.custom_qos_policy ~ defaults.apic.tenants.policies.custom_qos.name_suffix %}
                                                {
                                                    "l3extRsLIfPCustQosPol": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnQosCustomPolName": "{{ custom_qos_policy_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}
                                                {%- for int in ip.interfaces | default([]) %}{{ comma4() }}
                                                {% if int.port is defined or int.floating_svi | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.floating_svi) | cisco.aac.aac_bool("yes") == 'yes' %}
                                                    {% set type = 'ap' %}
                                                    {% set query = "nodes[?id==`" ~ int.node_id ~ "`].pod" %}
                                                    {% set pod = int.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                {% else %}
                                                    {% set policy_group_name = int.channel ~ defaults.apic.access_policies.leaf_interface_policy_groups.name_suffix %}
                                                    {% set query = "leaf_interface_policy_groups[?name==`" ~ int.channel ~ "`].type" %}
                                                    {% set type = (apic.access_policies | community.general.json_query(query))[0] %}
                                                    {% if int.node_id is defined %}
                                                        {% set node = int.node_id %}
                                                    {% else %}
                                                        {% set query = "nodes[?interfaces[?policy_group==`" ~ int.channel ~ "`]].id" %}
                                                        {% set node = (apic.interface_policies | default() | community.general.json_query(query))[0] %}
                                                    {% endif %}
                                                    {% set query = "nodes[?id==`" ~ node ~ "`].pod" %}
                                                    {% set pod = int.pod_id | default(((apic.node_policies | default()) | community.general.json_query(query))[0] | default('1')) %}
                                                    {% if type == 'vpc' %}
                                                        {% if int.node2_id is defined %}
                                                            {% set node2 = int.node2_id %}
                                                        {% else %}
                                                            {% set query = "nodes[?interfaces[?policy_group==`" ~ int.channel ~ "`]].id" %}
                                                            {% set node2 = (apic.interface_policies | default() | community.general.json_query(query))[1] %}
                                                        {% endif %}
                                                    {% endif %}
                                                {% endif %}
                                                {% if int.floating_svi | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.floating_svi) | cisco.aac.aac_bool("yes") == 'no' %}
                                                {
                                                    "l3extRsPathL3OutAtt": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ defaults.apic.tenants.l3outs.nodes.interfaces.ip if type == 'vpc' else int.ip }}",
                                                            "autostate": "disabled",
                                                            "descr": "{{ int.description | default() }}",
                                                            "encapScope": "local",
                                                            {% if int.vlan is defined %}
                                                            "ifInstT": "{{ 'ext-svi' if int.svi | default(defaults.apic.tenants.l3outs.nodes.interfaces.svi) | cisco.aac.aac_bool("yes") == 'yes' else 'sub-interface'}}",
                                                            "encap": "vlan-{{ int.vlan }}",
                                                            {% else %}
                                                            "ifInstT": "l3-port",
                                                            {% endif %}
                                                            "ipv6Dad": "enabled",
                                                            "llAddr": "::",
                                                            "mac": "{{ int.mac | default(defaults.apic.tenants.l3outs.nodes.interfaces.mac) }}",
                                                            "mode": "regular",
                                                            "mtu": "{{ int.mtu | default(defaults.apic.tenants.l3outs.nodes.interfaces.mtu) }}",
                                                            {% if type == 'ap' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/paths-{{ int.node_id }}/pathep-[eth{{ int.module | default(defaults.apic.tenants.l3outs.nodes.interfaces.module) }}/{{ int.port }}]",
                                                            {% elif type == 'pc' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/paths-{{ node }}/pathep-[{{ policy_group_name }}]",
                                                            {% elif type == 'vpc' %}
                                                            "tDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.nodes.interfaces.pod) }}/protpaths-{{ node }}-{{ node2 }}/pathep-[{{ policy_group_name }}]",
                                                            {% endif %}
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                {% else %}
                                                {
                                                    "l3extVirtualLIfP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "addr": "{{ int.ip }}",
                                                            "autostate": "disabled",
                                                            "descr": "{{ int.description | default() }}",
                                                            "encapScope": "local",
                                                            "ifInstT": "ext-svi",
                                                            "encap": "vlan-{{ int.vlan }}",
                                                            "ipv6Dad": "enabled",
                                                            "llAddr": "::",
                                                            "mac": "{{ int.mac | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.mac) }}",
                                                            "mode": "regular",
                                                            "mtu": "{{ int.mtu | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.mtu) }}",
                                                            "nodeDn": "topology/pod-{{ pod | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.pod) }}/node-{{ int.node_id }}",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                {% endif %}
                                                        "children": [
                                                            {%- set comma5 = joiner(",") %}
                                                            {%- if type != 'vpc' and int.ip_shared is defined %}{{ comma5() }}
                                                            {
                                                                "l3extIp": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_shared }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endif %}
                                                            {%- if type == 'vpc' %}{{ comma5() }}
                                                            {
                                                                "l3extMember": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_a }}",
                                                                        "side": "A",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "l3extIp": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "addr": "{{ int.ip_shared }}"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "l3extMember": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ int.ip_b }}",
                                                                        "side": "B",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "l3extIp": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "addr": "{{ int.ip_shared }}"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                            {%- endif %}
                                                            {%- if int.floating_svi | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.floating_svi) | cisco.aac.aac_bool("yes") == 'yes' %}
                                                            {%- for path in int.paths | default([]) %}{{ comma5() }}
                                                            {
                                                                "l3extRsDynPathAtt": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "floatingAddr": "{{ path.floating_ip }}",
                                                                        "tDn": "uni/phys-{{ path.physical_domain }}"
                                                                    }
                                                                }
                                                            }
                                                            {%- endfor %}
                                                            {%- endif %}
                                                            {%- for peer in int.bgp_peers | default([]) %}
                                                            {%- set ns.bgp = true %}{{ comma5() }}
                                                            {% set ctrl = [] %}
                                                            {% if peer.allow_self_as | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.allow_self_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("allow-self-as")] %}{% endif %}
                                                            {% if peer.as_override | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.as_override) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("as-override")] %}{% endif %}
                                                            {% if peer.disable_peer_as_check | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.disable_peer_as_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("dis-peer-as-check")] %}{% endif %}
                                                            {% if peer.next_hop_self | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.next_hop_self) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("nh-sel")] %}{% endif %}
                                                            {% if peer.send_community | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.send_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("send-com")] %}{% endif %}
                                                            {% if peer.send_ext_community | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.send_ext_community) | cisco.aac.aac_bool("yes") == "yes" %}{% set ctrl = ctrl + [("end-ext-com")] %}{% endif %}
                                                            {% set peer_ctrl = [] %}
                                                            {% if peer.bfd | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.bfd) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("bfd")] %}{% endif %}
                                                            {% if peer.disable_connected_check | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.disable_connected_check) | cisco.aac.aac_bool("yes") == "yes" %}{% set peer_ctrl = peer_ctrl + [("dis-conn-check")] %}{% endif %}
                                                            {% set priv_as_ctrl = [] %}
                                                            {% if peer.remove_all_private_as | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.remove_all_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-all")] %}{% endif %}
                                                            {% if peer.remove_private_as | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.remove_private_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("remove-exclusive")] %}{% endif %}
                                                            {% if peer.replace_private_as_with_local_as | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.replace_private_as_with_local_as) | cisco.aac.aac_bool("yes") == "yes" %}{% set priv_as_ctrl = priv_as_ctrl + [("replace-as")] %}{% endif %}
                                                            {% set af = [] %}
                                                            {% if peer.unicast_address_family | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.unicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-ucast")] %}{% endif %}
                                                            {% if peer.multicast_address_family | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.multicast_address_family) | cisco.aac.aac_bool("yes") == "yes" %}{% set af = af + [("af-mcast")] %}{% endif %}
                                                            {
                                                                "bgpPeerP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "addr": "{{ peer.ip }}",
                                                                        "descr": "{{ peer.description | default() }}",
                                                                        "ctrl": "{{ ctrl | join(',') }}",
                                                                        {% if peer.password is defined %}
                                                                        "password": "{{ peer.password }}",
                                                                        {% endif %}
                                                                        "allowedSelfAsCnt": "{{ peer.allowed_self_as_count |default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.allowed_self_as_count) }}",
                                                                        "peerCtrl": "{{ peer_ctrl | join(',') }}",
                                                                        "ttl": "{{ peer.ttl | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.ttl) }}",
                                                                        "weight": "{{ peer.weight | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.weight) }}",
                                                                        "privateASctrl": "{{ priv_as_ctrl | join(',') }}",
                                                                        "addrTCtrl": "{{ af | join(',') }}",
                                                                        "adminSt": "{{ peer.admin_state | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.admin_state) | cisco.aac.aac_bool("enabled") }}",
                                                                        "childAction": "deleteNonPresent"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "bgpAsP": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "asn": "{{ peer.remote_as }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- if peer.local_as is defined %},
                                                                        {
                                                                            "bgpLocalAsnP": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "localAsn": "{{ peer.local_as }}",
                                                                                    "asnPropagate" : "{{ peer.as_propagate | default(defaults.apic.tenants.l3outs.node_profiles.interface_profiles.interfaces.bgp_peers.as_propagate) }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.peer_prefix_policy is defined %},
                                                                        {% set peer_prefix_policy_name = peer.peer_prefix_policy ~ defaults.apic.tenants.policies.bgp_peer_prefix_policies.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerPfxPol": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "tnBgpPeerPfxPolName": "{{ peer_prefix_policy_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.export_route_control is defined %},
                                                                        {% set export_route_control_name = peer.export_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerToProfile": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "direction": "export",
                                                                                    "tDn": "uni/tn-{{ tenant.name }}/prof-{{ export_route_control_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}
                                                                        {%- if peer.import_route_control is defined %},
                                                                        {% set import_route_control_name = peer.import_route_control ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                                                                        {
                                                                            "bgpRsPeerToProfile": {
                                                                                "attributes": {
                                                                                    "annotation": "orchestrator:aac",
                                                                                    "direction": "import",
                                                                                    "tDn": "uni/tn-{{ tenant.name}}/prof-{{ import_route_control_name }}"
                                                                                }
                                                                            }
                                                                        }
                                                                        {%- endif %}

                                                                    ]
                                                                }
                                                            }
                                                            {%- endfor %}

                                                        ]
                                                    }
                                                }
                                                {%- endfor %}

                                            ]
                                        }
                                    }
                                    {%- endfor %}

                                ]
                            }
                        }
                        {%- endfor %}
                        {%- if l3out.ospf is defined %}{{ comma2() }}
                        {
                            "ospfExtP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/ospfExtP",
                                    "areaCost": "{{ l3out.ospf.area_cost | default(defaults.apic.tenants.l3outs.ospf.area_cost) }}",
                                    "areaCtrl": "redistribute,summary",
                                    "areaId": "{{ l3out.ospf.area }}",
                                    "areaType": "{{ l3out.ospf.area_type | default(defaults.apic.tenants.l3outs.ospf.area_type) }}"
                                }
                            }
                        }
                        {%- endif %}
                        {%- if ns.bgp is sameas true or tenant.name == 'infra' %}{{ comma2() }}
                        {
                            "bgpExtP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/bgpExtP"
                                }
                            }
                        }
                        {%- endif %}{{ comma2() }}
                        {% set domain_name = l3out.domain ~ defaults.apic.access_policies.routed_domains.name_suffix %}
                        {
                            "l3extRsL3DomAtt": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsl3DomAtt",
                                    "tDn": "uni/l3dom-{{ domain_name }}"
                                }
                            }
                        }{{ comma2() }}
                        {% set vrf_name = l3out.vrf ~ ('' if l3out.vrf in ('inb', 'obb', 'overlay-1') else defaults.apic.tenants.vrfs.name_suffix) %}
                        {
                            "l3extRsEctx": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsectx",
                                    "tnFvCtxName": "{{ vrf_name }}"
                                }
                            }
                        }
                        {%- if l3out.import_route_map is defined %}{{ comma2() }}
                        {
                            "rtctrlProfile": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/prof-default-import",
                                    "name": "default-import",
                                    "descr": "{{ l3out.import_route_map.description | default() }}",
                                    "type": "{{ l3out.import_route_map.type | default(defaults.apic.tenants.l3outs.import_route_map.type) }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                    {%- set comma3 = joiner(",") %}
                                    {%- for context in l3out.import_route_map.contexts | default([]) %}{{ comma3() }}
                                    {% set context_name = context.name ~ defaults.apic.tenants.l3outs.import_route_map.contexts.name_suffix %}
                                    {
                                        "rtctrlCtxP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "action": "{{ context.action | default(defaults.apic.tenants.l3outs.import_route_map.contexts.action) }}",
                                                "descr": "{{ context.description | default() }}",
                                                "name": "{{ context_name }}",
                                                "order": "{{ context.order | default(defaults.apic.tenants.l3outs.import_route_map.contexts.order) }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if context.set_rule is defined %}{{ comma4() }}
                                                {% set rule_name = context.set_rule ~ defaults.apic.tenants.policies.set_rules.name_suffix %}
                                                {
                                                    "rtctrlScope": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "name": "",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "rtctrlRsScopeToAttrP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnRtctrlAttrPName": "{{ rule_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if context.match_rule is defined %}{{ comma4() }}
                                                {% set rule_name = context.match_rule ~ defaults.apic.tenants.policies.match_rules.name_suffix %}
                                                {
                                                    "rtctrlRsCtxPToSubjP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnRtctrlSubjPName": "{{ rule_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}

                                            ]
                                        }
                                    }
                                    {%- endfor %}

                                ]
                            }
                        }
                        {%- endif %}
                        {%- if l3out.export_route_map is defined %}{{ comma2() }}
                        {
                            "rtctrlProfile": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/prof-default-export",
                                    "name": "default-export",
                                    "descr": "{{ l3out.export_route_map.description | default() }}",
                                    "type": "{{ l3out.export_route_map.type | default(defaults.apic.tenants.l3outs.export_route_map.type) }}",
                                    "childAction": "deleteNonPresent"
                                },
                                "children": [
                                    {%- set comma3 = joiner(",") %}
                                    {%- for context in l3out.export_route_map.contexts | default([]) %}{{ comma3() }}
                                    {% set context_name = context.name ~ defaults.apic.tenants.l3outs.export_route_map.contexts.name_suffix %}
                                    {
                                        "rtctrlCtxP": {
                                            "attributes": {
                                                "annotation": "orchestrator:aac",
                                                "action": "{{ context.action | default(defaults.apic.tenants.l3outs.export_route_map.contexts.action) }}",
                                                "descr": "{{ context.description | default() }}",
                                                "name": "{{ context_name }}",
                                                "order": "{{ context.order | default(defaults.apic.tenants.l3outs.export_route_map.contexts.order) }}",
                                                "childAction": "deleteNonPresent"
                                            },
                                            "children": [
                                                {%- set comma4 = joiner(",") %}
                                                {%- if context.set_rule is defined %}{{ comma4() }}
                                                {% set rule_name = context.set_rule ~ defaults.apic.tenants.policies.set_rules.name_suffix %}
                                                {
                                                    "rtctrlScope": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "name": "",
                                                            "childAction": "deleteNonPresent"
                                                        },
                                                        "children": [
                                                            {
                                                                "rtctrlRsScopeToAttrP": {
                                                                    "attributes": {
                                                                        "annotation": "orchestrator:aac",
                                                                        "tnRtctrlAttrPName": "{{ rule_name }}"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                                {%- endif %}
                                                {%- if context.match_rule is defined %}{{ comma4() }}
                                                {% set rule_name = context.match_rule ~ defaults.apic.tenants.policies.match_rules.name_suffix %}
                                                {
                                                    "rtctrlRsCtxPToSubjP": {
                                                        "attributes": {
                                                            "annotation": "orchestrator:aac",
                                                            "tnRtctrlSubjPName": "{{ rule_name }}"
                                                        }
                                                    }
                                                }
                                                {%- endif %}

                                            ]
                                        }
                                    }
                                    {%- endfor %}

                                ]
                            }
                        }
                        {%- endif %}
                        {%- if l3out.l3_multicast_ipv4 | default(defaults.apic.tenants.l3outs.l3_multicast_ipv4) | cisco.aac.aac_bool("yes") == 'yes' %}{{ comma2() }}
                        {
                            "pimExtP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/pimextp",
                                    "enabledAf": "ipv4-mcast",
                                    "name": "pim"
                                }
                            }
                        }
                        {%- endif %}
                        {%- if l3out.interleak_route_map is defined %}{{ comma2() }}
                        {% set interleak_route_map_name = l3out.interleak_route_map ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                        {
                            "l3extRsInterleakPol": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsinterleakPol",
                                    "tnRtctrlProfileName": "{{ interleak_route_map_name }}"                                    
                                }
                            }
                        }
                        {%- endif %}
                        {%- if l3out.default_route_leak_policy is defined %}{{ comma2() }}
                        {% set scope = [] %}
                        {% if l3out.default_route_leak_policy.context_scope | default(defaults.apic.tenants.l3outs.default_route_leak_policy.context_scope) | cisco.aac.aac_bool("yes") == "yes" %}{% set scope = scope + [("ctx")] %}{% endif %}
                        {% if l3out.default_route_leak_policy.outside_scope | default(defaults.apic.tenants.l3outs.default_route_leak_policy.outside_scope) | cisco.aac.aac_bool("yes") == "yes" %}{% set scope = scope + [("l3-out")] %}{% endif %}
                        {
                            "l3extDefaultRouteLeakP": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/defrtleak",
                                    "always": "{{ default_route_leak_policy.always | default(defaults.apic.tenants.l3outs.default_route_leak_policy.always) | cisco.aac.aac_bool("yes") }}",
                                    "criteria": "{{ default_route_leak_policy.criteria | default(defaults.apic.tenants.l3outs.default_route_leak_policy.criteria) }}",
                                    "scope": "{{ scope | join(',') }}"
                                }
                            }
                        }
                        {%- endif %}
                        {%- if l3out.dampening_ipv4_route_map is defined %}{{ comma2() }}
                        {% set dampening_ipv4_route_map_name = l3out.dampening_ipv4_route_map ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                        {
                            "l3extRsDampeningPol": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsdampeningPol-[{{ dampening_ipv4_route_map_name }}]-ipv4-ucast",
                                    "af": "ipv4-ucast",
                                    "tnRtctrlProfileName": "{{ dampening_ipv4_route_map_name }}"
                                }
                            }
                        }
                        {%- endif %}                        
                        {%- if l3out.dampening_ipv6_route_map is defined %}{{ comma2() }}
                        {% set dampening_ipv6_route_map_name_name = l3out.dampening_ipv6_route_map ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                        {
                            "l3extRsDampeningPol": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsdampeningPol-[{{ dampening_ipv6_route_map_name_name }}]-ipv6-ucast",
                                    "af": "ipv6-ucast",
                                    "tnRtctrlProfileName": "{{ dampening_ipv6_route_map_name_name }}"
                                }
                            }
                        }
                        {%- endif %}
                        {%- for rm in l3out.redistribution_route_maps | default([]) %}{{ comma2() }}
                        {% set redistribution_route_map_name = rm.route_map ~ defaults.apic.tenants.policies.route_control_route_maps.name_suffix %}
                        {
                            "l3extRsRedistributePol": {
                                "attributes": {
                                    "annotation": "orchestrator:aac",
                                    "dn": "uni/tn-{{ tenant.name }}/out-{{ l3out_name }}/rsredistributePol-[{{ redistribution_route_map_name }}]-{{ rm.source | default(defaults.apic.tenants.l3outs.redistribution_route_maps.source) }}",
                                    "src": "{{ rm.source | default(defaults.apic.tenants.l3outs.redistribution_route_maps.source) }}",
                                    "tnRtctrlProfileName": "{{ redistribution_route_map_name }}"
                                }
                            }
                        }
                        {%- endfor %}    

                    ]
                }
            }
            {%- endfor %}

        ]
    }
}

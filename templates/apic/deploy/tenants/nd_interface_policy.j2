{# iterate_list apic.tenants name item[2] #}
{% set tenant = ((apic | default()) | community.general.json_query('tenants[?name==`' ~ item[2] ~ '`]'))[0] %}
{
    "fvTenant": {
        "attributes": {
            "dn": "uni/tn-{{ tenant.name }}",
            "name": "{{ tenant.name }}"
        },
        "children": [
            {%- set comma1 = joiner(",") %}
            {%- for nd_intf_pol in tenant.policies.nd_interface_policies | default([]) %}{{ comma1() }}
            {% set policy_name = nd_intf_pol.name ~ defaults.apic.tenants.policies.nd_interface_policies.name_suffix %}
            {% if nd_intf_pol.controller_state is defined %}{% set state = nd_intf_pol.controller_state | join(',') %}{% endif %}
            {
                "ndIfPol": {
                    "attributes": {
                        "annotation": "orchestrator:aac",
                        "name": "{{ policy_name }}",
                        "descr": "{{ nd_intf_pol.description | default() }}",
                        "dn": "uni/tn-{{ tenant.name }}/ndifpol-{{ policy_name }}",
                        "ctrl": "{{ state | default() }}",
                        "hopLimit": "{{ nd_intf_pol.hop_limit | default(defaults.apic.tenants.policies.nd_interface_policies.hop_limit) }}",
                        "nsIntvl": "{{ nd_intf_pol.ns_tx_interval | default(defaults.apic.tenants.policies.nd_interface_policies.ns_tx_interval) }}",
                        "mtu": "{{ nd_intf_pol.mtu | default(defaults.apic.tenants.policies.nd_interface_policies.mtu) }}",
                        "nsRetries": "{{ nd_intf_pol.retransmit_retry_count | default(defaults.apic.tenants.policies.nd_interface_policies.retransmit_retry_count) }}",
                        {% if nd_intf_pol.nud_retransmit_base is defined %}
                        "nudRetryBase": "{{ nd_intf_pol.nud_retransmit_base }}",
                        {% endif %}
                        {% if nd_intf_pol.nud_retransmit_interval is defined %}
                        "nudRetryInterval": "{{ nd_intf_pol.nud_retransmit_interval }}",
                        {% endif %}
                        {% if nd_intf_pol.nud_retransmit_count is defined %}
                        "nudRetryMaxAttempts": "{{ nd_intf_pol.nud_retransmit_count }}",
                        {% endif %}
                        "raIntvl": "{{ nd_intf_pol.route_advertise_interval | default(defaults.apic.tenants.policies.nd_interface_policies.route_advertise_interval) }}",
                        "raLifetime": "{{ nd_intf_pol.router_lifetime | default(defaults.apic.tenants.policies.nd_interface_policies.router_lifetime) }}",
                        "reachableTime": "{{ nd_intf_pol.reachable_time | default(defaults.apic.tenants.policies.nd_interface_policies.reachable_time) }}",
                        "retransTimer": "{{ nd_intf_pol.retransmit_timer | default(defaults.apic.tenants.policies.nd_interface_policies.retransmit_timer) }}"
                    }
                }
            }
            {%- endfor %}

        ]
    }
}

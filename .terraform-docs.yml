version: ">= 0.14.0"

formatter: markdown table

content: |-
  [![Tests](https://github.com/netascode/terraform-aci-nac-aci/actions/workflows/test.yml/badge.svg)](https://github.com/netascode/terraform-aci-nac-aci/actions/workflows/test.yml)

  # Terraform ACI Network-as-Code Module

  A Terraform module to configure ACI.

  This module is part of the Cisco [*Network-as-Code*](https://netascode.cisco.com) project. Its goal is to allow users to instantiate network fabrics in minutes using an easy to use, opinionated data model. It takes away the complexity of having to deal with references, dependencies or loops. By completely separating data (defining variables) from logic (infrastructure declaration), it allows the user to focus on describing the intended configuration while using a set of maintained and tested Terraform Modules without the need to understand the low-level ACI object model. More information can be found here: https://netascode.cisco.com.

  A comprehensive example using this module is available here: https://github.com/netascode/nac-aci-comprehensive-example

  ## Usage

  This module supports an inventory driven approach, where a complete ACI configuration or parts of it are either modeled in one or more YAML files or natively using Terraform variables.

  There are six configuration sections which can be selectively enabled or disabled using module flags:

  - `fabric_policies`: Configurations applied at the fabric level (e.g., fabric BGP route reflectors)
  - `access_policies`: Configurations applied to external facing (downlink) interfaces (e.g., VLAN pools)
  - `pod_policies`: Configurations applied at the pod level (e.g., TEP pool addresses)
  - `node_policies`: Configurations applied at the node level (e.g., OOB node management address)
  - `interface_policies`: Configurations applied at the interface level (e.g., assigning interface policy groups to physical ports)
  - `tenants`: Configurations applied at the tenant level (e.g., VRFs and Bridge Domains)

  The full data model documentation is available here: https://netascode.cisco.com/data_model/overview

  ## Examples

  Configuring a VLAN Pool using YAML:

  #### `vlan_pool.yaml`

  ```hcl
  {{ include "./examples/vlan_pool_yaml/vlan_pool.yaml" }}
  ```

  #### `main.tf`

  ```hcl
  {{ include "./examples/vlan_pool_yaml/main.tf" }}
  ````

  Configuring a Banner using native HCL:

  #### `main.tf`

  ```hcl
  {{ include "./examples/banner_hcl/main.tf" }}
  ````

  Additional example repositories:

  - https://github.com/netascode/nac-aci-simple-example
  - https://github.com/netascode/nac-aci-comprehensive-example

  {{ .Requirements }}

  {{ .Inputs }}

  {{ .Outputs }}

  {{ .Providers }}

  {{ .Resources }}

  {{ .Modules }}

output:
  file: README.md
  mode: replace

sort:
  enabled: true
  by: required
